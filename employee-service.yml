spring: 
  application:
    name: EMPLOYEE-SERVICE
  datasource:
    url: jdbc:mysql://localhost:3306/employee
    username: employee
    password: employee
  jpa:
    properties:
      hibernate:
       dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update #Hibernate cria automaticamente as tabelas
    open-in-view: false #Best practice in modern Spring Boot apps (especially REST APIs) is to set spring.jpa.open-in-view=false and fetch all required data in the service layer.
  boot:
    message: Hello, Employee Service Spring Cloud Bus Demo.
server:
  port: 8081 #8081 #Mudanca da porta em que a APP inicia.
department:
  web-service-base-url: http://localhost:8080
  getDepartmentByCodePath: /api/department/getDepartmentByCode/
  url-name: DEPARTMENT-SERVICE
  load-balancer-name: DEPARTMENT-SERVICE #Load balancing. URL que esta no Eureka Server (http:localhost:8671/eureka) para permitr balanceamentod e carga. O Eureka Server ja vem com isso. Fica no Aplication Name
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
management: #   <!-- Config distributed tracing using Micrometer(Replacing Spring Sleuth) and Zipkin. Auxilia no tracing do fluxo de chamamento de APIs entre os microservicos e o tempo de chamamento do servico.-->
  tracing:
    sampling:
      probability: 1.0  # 100% sampling for dev, adjust for production
  zipkin:
    tracing:
      endpoint: http://172.19.12.65:9411/api/v2/spans
  # Optional: Export traces to logs for debugging
  otlp:
    tracing:
      endpoint: http://172.19.12.65:9411/api/v2/spans
  health:
    circuitbreakers:
      enabled: true #   <!-- Circuit Breaker Impl. Previne chamada a serviços da API que estão em baixo e define respostas padrão, ao invês de esperar pelo timeout. Previne um microserviço indisponível em sabotar todos os microserviços. Funciona para chamadas usando Webclient-->
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
resilience4j:
  circuitbreaker:
    instances:
      EMPLOYEE-SERVICE: #$Spring.application.name
        registerHealthIndicator: true
        failureRateThreshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED
